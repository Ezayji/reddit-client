[{"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\App\\App.js":"3","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Header\\Header.js":"4","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js":"5","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\Store.js":"6","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js":"7","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostsList.js":"8","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostRender.js":"9","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Preview.js":"10","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Post.js":"11","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js":"12","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Comments.js":"13","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js":"14","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Reply.js":"15","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js":"16","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\FilterSlice.js":"17","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\Filter.js":"18","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Awards.js":"19","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\PostsListSkeleton.js":"20","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\SearchResultsSkeleton.js":"21","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\CommentsSkeleton.js":"22","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\MainPageFilter.js":"23","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\FeaturedSubs.js":"24","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\index.js":"25","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\reportWebVitals.js":"26","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\Store.js":"27","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\App\\App.js":"28","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js":"29","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\FilterSlice.js":"30","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Header\\Header.js":"31","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\PostsList.js":"32","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js":"33","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Post.js":"34","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\PostRender.js":"35","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\FeaturedSubs.js":"36","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js":"37","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\Filter.js":"38","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\MainPageFilter.js":"39","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js":"40","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\TypeFilter.js":"41","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\SearchResultsSkeleton.js":"42","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\PostsListSkeleton.js":"43","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Comments.js":"44","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Preview.js":"45","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Awards.js":"46","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\CommentsSkeleton.js":"47","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js":"48","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Reply.js":"49","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\CommunityList.js":"50","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\SubReditPostsSlice.js":"51","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SubRedditPostsList.js":"52","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\SubReditPostsSlice.js":"53","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SubRedditPostsList.js":"54","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\CommunityList.js":"55","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\TypeFilter.js":"56","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\SubRedditListSkeleton.js":"57","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\LinkRenderer.js":"58"},{"size":888,"mtime":1610747631019,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":843,"mtime":1611004507354,"results":"62","hashOfConfig":"60"},{"size":378,"mtime":1610753339963,"results":"63","hashOfConfig":"60"},{"size":2652,"mtime":1611138717659,"results":"64","hashOfConfig":"60"},{"size":355,"mtime":1611004026698,"results":"65","hashOfConfig":"60"},{"size":2996,"mtime":1611583474400,"results":"66","hashOfConfig":"60"},{"size":1764,"mtime":1611045081506,"results":"67","hashOfConfig":"60"},{"size":1287,"mtime":1610997740357,"results":"68","hashOfConfig":"60"},{"size":3088,"mtime":1611055779539,"results":"69","hashOfConfig":"60"},{"size":1038,"mtime":1611005974140,"results":"70","hashOfConfig":"60"},{"size":2179,"mtime":1611170692340,"results":"71","hashOfConfig":"60"},{"size":1080,"mtime":1610909975007,"results":"72","hashOfConfig":"60"},{"size":2469,"mtime":1611170831126,"results":"73","hashOfConfig":"60"},{"size":1821,"mtime":1611170786517,"results":"74","hashOfConfig":"60"},{"size":3066,"mtime":1611178525639,"results":"75","hashOfConfig":"60"},{"size":644,"mtime":1610983876493,"results":"76","hashOfConfig":"60"},{"size":3175,"mtime":1611177585123,"results":"77","hashOfConfig":"60"},{"size":756,"mtime":1610889239244,"results":"78","hashOfConfig":"60"},{"size":1814,"mtime":1611044323251,"results":"79","hashOfConfig":"60"},{"size":408,"mtime":1611178686702,"results":"80","hashOfConfig":"60"},{"size":1578,"mtime":1611044018820,"results":"81","hashOfConfig":"60"},{"size":2164,"mtime":1611174774214,"results":"82","hashOfConfig":"60"},{"size":4169,"mtime":1611054861467,"results":"83","hashOfConfig":"60"},{"size":888,"mtime":1610747631019,"results":"84","hashOfConfig":"85"},{"size":362,"mtime":499162500000,"results":"86","hashOfConfig":"85"},{"size":355,"mtime":1611004026698,"results":"87","hashOfConfig":"85"},{"size":843,"mtime":1611004507354,"results":"88","hashOfConfig":"85"},{"size":2986,"mtime":1610983748522,"results":"89","hashOfConfig":"85"},{"size":644,"mtime":1610983876493,"results":"90","hashOfConfig":"85"},{"size":378,"mtime":1610753339963,"results":"91","hashOfConfig":"85"},{"size":1756,"mtime":1611007630910,"results":"92","hashOfConfig":"85"},{"size":2244,"mtime":1610994605675,"results":"93","hashOfConfig":"85"},{"size":1038,"mtime":1611005974140,"results":"94","hashOfConfig":"85"},{"size":1287,"mtime":1610997740357,"results":"95","hashOfConfig":"85"},{"size":1247,"mtime":1610972606416,"results":"96","hashOfConfig":"85"},{"size":1862,"mtime":1610970298001,"results":"97","hashOfConfig":"85"},{"size":3050,"mtime":1610889557321,"results":"98","hashOfConfig":"85"},{"size":1058,"mtime":1610965462854,"results":"99","hashOfConfig":"85"},{"size":2449,"mtime":1611007378934,"results":"100","hashOfConfig":"85"},{"size":819,"mtime":1610990412832,"results":"101","hashOfConfig":"85"},{"size":409,"mtime":1610990206793,"results":"102","hashOfConfig":"85"},{"size":1825,"mtime":1610906962969,"results":"103","hashOfConfig":"85"},{"size":1080,"mtime":1610909975007,"results":"104","hashOfConfig":"85"},{"size":2962,"mtime":1610629537209,"results":"105","hashOfConfig":"85"},{"size":756,"mtime":1610889239244,"results":"106","hashOfConfig":"85"},{"size":1628,"mtime":1610909841804,"results":"107","hashOfConfig":"85"},{"size":2021,"mtime":1610788433170,"results":"108","hashOfConfig":"85"},{"size":1353,"mtime":1610655898704,"results":"109","hashOfConfig":"85"},{"size":1694,"mtime":1611006827518,"results":"110","hashOfConfig":"85"},{"size":1796,"mtime":1611007230269,"results":"111","hashOfConfig":"85"},{"size":1581,"mtime":1611008517425,"results":"112","hashOfConfig":"85"},{"size":1797,"mtime":1611055424051,"results":"113","hashOfConfig":"60"},{"size":2284,"mtime":1611178809063,"results":"114","hashOfConfig":"60"},{"size":1694,"mtime":1611006827518,"results":"115","hashOfConfig":"60"},{"size":1048,"mtime":1611176296475,"results":"116","hashOfConfig":"60"},{"size":1223,"mtime":1611047504566,"results":"117","hashOfConfig":"60"},{"size":462,"mtime":1611170721327,"results":"118","hashOfConfig":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"1q0w9qj",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"121"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1jxi46o",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"172"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"121"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\index.js",[],["242","243"],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\App\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\Store.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostsList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Preview.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Post.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Comments.js",["244"],"import React, { useState, useEffect } from 'react';\r\nimport SingleComment from './SingleComment';\r\n\r\nimport CommentsSkeleton from '../Skeletons/CommentsSkeleton';\r\n\r\nconst Content = ({ url }) => {\r\n    const [comments, setComments] = useState(null);\r\n    useEffect(() => {\r\n        const clink = `https://www.reddit.com${url}.json?limit=200`\r\n        async function fetchComments(){\r\n            const response = await fetch(clink);\r\n            const jsonResponse = await response.json();\r\n            setComments(jsonResponse);\r\n        }\r\n        fetchComments();\r\n    }, [])\r\n    \r\n    let commentsRender;\r\n\r\n    if(!comments){\r\n        commentsRender = Array(5).fill().map((item, i) => (\r\n            <CommentsSkeleton />\r\n        ))\r\n        \r\n    } else {\r\n        commentsRender = (\r\n            comments[1].data.children.map((comment, i) => (\r\n                <SingleComment comment={comment} key={i} />\r\n            ))\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"comments\">\r\n            {commentsRender}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Reply.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js",["245"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllPosts } from '../Redux/PostsSlice';\r\nimport PostRender from './PostRender';\r\nimport CommunityList from './CommunityList';\r\nimport Filter from '../Filter/Filter';\r\nimport TypeFilter from '../Filter/TypeFilter';\r\n\r\nimport store from '../Redux/Store';\r\nimport { termAdded, fetchResults } from '../Redux/PostsSlice';\r\n\r\nimport PostsListSkeleton from '../Skeletons/PostsListSkeleton';\r\nimport SubRedditListSkeleton from '../Skeletons/SubRedditListSkeleton';\r\n\r\n\r\nconst SearchResults = ({ match }) => {\r\n    const urlTerm = match.params.id.replaceAll(' ', '%20');\r\n    const matchTerm = urlTerm.concat('%20');\r\n\r\n    const posts = useSelector(selectAllPosts);\r\n\r\n    const currentType = useSelector(state => state.filters.type);\r\n\r\n    const searchTerm = useSelector(state => state.posts.term);\r\n    const postStatus = useSelector(state => state.posts.status);\r\n    const error = useSelector(state => state.posts.error);\r\n    \r\n    useEffect(() => {\r\n        if((matchTerm !== searchTerm && postStatus === 'done') || (matchTerm === searchTerm && postStatus === 'succeeded')){\r\n            store.dispatch(termAdded(matchTerm))\r\n            store.dispatch(fetchResults());\r\n        }\r\n    }, [matchTerm, postStatus])\r\n\r\n    let content\r\n\r\n    if(postStatus === 'finding' && currentType === 'link'){\r\n        content = Array(10).fill().map((item, i) => (\r\n            <PostsListSkeleton key={i} />\r\n        ))\r\n    } else if (postStatus === 'finding' && currentType === 'sr'){\r\n        content = Array(10).fill().map((item, i) => (\r\n            <SubRedditListSkeleton key={i} />\r\n        ))\r\n    } else if (postStatus === 'done' && currentType === 'link'){\r\n        content = posts.data.children.map((post, i)=> (\r\n                <PostRender post={post} key={post.data.id} />\r\n        ))\r\n    } else if(postStatus === 'done' && currentType === 'sr'){\r\n        content = posts.data.children.map((post, i)=> (\r\n            <CommunityList community={post} key={post.data.id} />\r\n    ))\r\n    } else if (postStatus === 'error'){\r\n        content = {error};\r\n    }  \r\n\r\n    return(\r\n        <div className='feed'>\r\n            <div className=\"feed-div\" >\r\n                <div className=\"results-for-div\"><h1 className=\"results-for\">Search results for \"{searchTerm.replaceAll(\"%20\", \" \").trim()}\"</h1></div>\r\n                <Filter />\r\n                <TypeFilter />\r\n                {content}\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default SearchResults;\r\n// import {ResultsForSkeleton}  from '../Skeletons/SearchResultsSkeleton'\r\n// <ResultsForSkeleton />\r\n/*\r\n    let heading\r\n    let filter;\r\n    let content\r\n    let type_Filter;\r\n                {heading}\r\n                {filter}\r\n                {type_Filter}\r\n\r\nheading = <ResultsForSkeleton />\r\nheading = <div className=\"results-for-div\"><h1 className=\"results-for\">Search results for \"{searchTerm.replaceAll(\"%20\", \" \").trim()}\"</h1></div>\r\nfilter = <Filter />\r\ntype_Filter = <TypeFilter />\r\n*/","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\FilterSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\Filter.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Awards.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\PostsListSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\SearchResultsSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\CommentsSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\MainPageFilter.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\FeaturedSubs.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\index.js",[],["246","247"],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\Store.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\App\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\FilterSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\PostsList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Post.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\PostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\FeaturedSubs.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\Filter.js",["248","249","250","251","252","253"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { sortByAdded, postFromAdded } from '../Redux/FilterSlice';\r\nimport { fetchResults } from '../Redux/PostsSlice';\r\n\r\nimport store from '../Redux/Store';\r\n\r\nconst Filter = () => {\r\n    const sortBy = useSelector(state => state.filters.sortBy);\r\n    const postsFrom = useSelector(state => state.filters.postsFrom);\r\n\r\n    const [sort, setSort] = useState(sortBy);\r\n    const [from, setFrom] = useState(postsFrom);\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(sortBy !== sort && postsFrom !== from){\r\n            store.dispatch(sortByAdded(sort));\r\n            store.dispatch(postFromAdded(from));\r\n            store.dispatch(fetchResults());\r\n        } else if (sortBy !== sort && postsFrom === from){\r\n            store.dispatch(sortByAdded(sort));\r\n            store.dispatch(fetchResults());\r\n        } else if(sortBy === sort && postsFrom !== from){\r\n            store.dispatch(postFromAdded(from));\r\n            store.dispatch(fetchResults());\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    let input;\r\n    let postsSelect;\r\n\r\n    if(sortBy !== sort && postsFrom !== from || sortBy !== sort && postsFrom === from || sortBy === sort && postsFrom !== from){\r\n        input = <input className=\"submit\" type=\"submit\" value=\"Filter\" />\r\n    } else {\r\n        input = null;\r\n    }\r\n\r\n    if(sort !== \"New\"){\r\n        postsSelect = (\r\n                    <label>\r\n                        <p>POSTS FROM</p>\r\n                        <select value={from} onChange={(e) => {setFrom(e.target.value)}} >\r\n                            <option value=\"hour\" >Past Hour</option>\r\n                            <option value=\"day\" >Past 24 Hours</option>\r\n                            <option value=\"week\" >Past Week</option>\r\n                            <option value=\"month\" >Past Month</option>\r\n                            <option value=\"year\" >Past Year</option>\r\n                            <option value=\"all\" >All Time</option>\r\n                        </select>\r\n                    </label>\r\n        )\r\n    } else {\r\n        postsSelect = null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"filter-div\" >\r\n            <form onSubmit={onSubmit} >\r\n                <div className=\"label-select-div\">\r\n                    <label>\r\n                        <p>SORT BY</p>\r\n                        <select value={sort} onChange={(e) => {setSort(e.target.value)}} >\r\n                            <option value=\"Relevance\" >Relevance</option>\r\n                            <option value=\"Hot\" >Hot</option>\r\n                            <option value=\"Top\" >Top</option>\r\n                            <option value=\"New\" >New</option>\r\n                            <option value=\"Comments\" >Comments</option>\r\n                        </select>\r\n                    </label>\r\n                    {postsSelect}\r\n                </div>\r\n                {input}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\MainPageFilter.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Filter\\TypeFilter.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\SearchResultsSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\PostsListSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Comments.js",["254"],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Preview.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Awards.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Skeletons\\CommentsSkeleton.js",["255"],"import { render } from '@testing-library/react';\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton';\r\n\r\nconst CommentsSkeleton = () => {\r\n    return(\r\n        <div className=\"comment\" >\r\n            <div className=\"comment-border\" ></div>\r\n            <div className=\"comment-content\" >\r\n                <p>\r\n                    <SkeletonTheme color=\"#0d1117\" highlightColor=\"#2d0364\" >\r\n                        <Skeleton width={200} height={18}/>\r\n                    </SkeletonTheme>\r\n                </p>\r\n                <p style={{marginTop: \"5px\"}} >\r\n                    <SkeletonTheme color=\"#0d1117\" highlightColor=\"#2d0364\" >\r\n                        <Skeleton width={`100%`} height={18} />\r\n                    </SkeletonTheme>\r\n                </p>\r\n                <p style={{marginTop: \"5px\"}} >\r\n                    <SkeletonTheme color=\"#0d1117\" highlightColor=\"#2d0364\" >\r\n                        <Skeleton width={`100%`} height={18} />\r\n                    </SkeletonTheme>\r\n                </p>\r\n                <p style={{marginTop: \"5px\"}} >\r\n                    <SkeletonTheme color=\"#0d1117\" highlightColor=\"#2d0364\" >\r\n                        <Skeleton width={`50%`} height={18} />\r\n                    </SkeletonTheme>\r\n                </p>\r\n                <p style={{marginTop: \"5px\"}} >\r\n                    <SkeletonTheme color=\"#0d1117\" highlightColor=\"#2d0364\" >\r\n                        <Skeleton width={100} height={16} />\r\n                    </SkeletonTheme>\r\n                </p>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsSkeleton;","C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\Reply.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\CommunityList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\Redux\\SubReditPostsSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\Codeproj\\reddit-client\\src\\Components\\PostsList\\SubRedditPostsList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\SubReditPostsSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SubRedditPostsList.js",["256"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllSubPosts, fetchSubPosts, subRedditAdded } from '../Redux/SubReditPostsSlice';\r\nimport PostRender from './PostRender';\r\n\r\nimport {ResultsForSkeleton}  from '../Skeletons/SearchResultsSkeleton'\r\nimport PostsListSkeleton from '../Skeletons/PostsListSkeleton';\r\n\r\nimport store from '../Redux/Store';\r\n\r\n\r\nconst SubRedditPostsList = ({ match }) => {\r\n    \r\n    const matchUrl = match.params.id;\r\n\r\n    const posts = useSelector(selectAllSubPosts);\r\n    const subName = useSelector(state => {\r\n        if(state.community.posts.data){\r\n            return state.community.posts.data.children[0].data.subreddit_name_prefixed\r\n        } else {\r\n            return null\r\n        }\r\n    });\r\n\r\n    const subNameState = useSelector(state => {\r\n        if(state.community.subReddit){\r\n            return state.community.subReddit;\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    const postStatus = useSelector(state => state.community.status);\r\n    const error = useSelector(state => state.community.error);\r\n    \r\n    useEffect(() => {\r\n        if((subNameState !== matchUrl && postStatus === 'presented') || postStatus === 'idle'){\r\n            console.log(matchUrl);\r\n            console.log(subName);\r\n            store.dispatch(subRedditAdded(matchUrl))\r\n            store.dispatch(fetchSubPosts());\r\n        }\r\n    }, [matchUrl, postStatus])\r\n\r\n    let header;\r\n    let content;\r\n\r\n    if(postStatus === 'requesting'){\r\n        header = <ResultsForSkeleton />\r\n        content = Array(10).fill().map((item, i) => (\r\n            <PostsListSkeleton />\r\n        ))\r\n    } else if (postStatus === 'presented'){\r\n        header = <div className=\"results-for-div\"><h1 className=\"results-for\">{subName}</h1></div>;\r\n        content = posts.data.children.map((post, i)=> (\r\n                <PostRender post={post} key={post.data.id} />\r\n        ))\r\n    } else if (postStatus === 'error'){\r\n        content = {error};\r\n    }\r\n\r\n    return(\r\n        <div className='feed main'>\r\n            <div className=\"feed-div\" >\r\n                {header}\r\n                {content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubRedditPostsList;\r\n\r\n/* {subName} */","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\CommunityList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Filter\\TypeFilter.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Skeletons\\SubRedditListSkeleton.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\LinkRenderer.js",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":16,"column":8,"nodeType":"263","endLine":16,"endColumn":10,"suggestions":"264"},{"ruleId":"261","severity":1,"message":"265","line":33,"column":8,"nodeType":"263","endLine":33,"endColumn":31,"suggestions":"266"},{"ruleId":"257","replacedBy":"267"},{"ruleId":"259","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":35,"column":24,"nodeType":"271","messageId":"272","endLine":35,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":35,"column":46,"nodeType":"271","messageId":"272","endLine":35,"endColumn":48},{"ruleId":"269","severity":1,"message":"273","line":35,"column":46,"nodeType":"271","messageId":"272","endLine":35,"endColumn":48},{"ruleId":"269","severity":1,"message":"273","line":35,"column":65,"nodeType":"271","messageId":"272","endLine":35,"endColumn":67},{"ruleId":"269","severity":1,"message":"273","line":35,"column":87,"nodeType":"271","messageId":"272","endLine":35,"endColumn":89},{"ruleId":"269","severity":1,"message":"273","line":35,"column":106,"nodeType":"271","messageId":"272","endLine":35,"endColumn":108},{"ruleId":"261","severity":1,"message":"262","line":16,"column":8,"nodeType":"263","endLine":16,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":16},{"ruleId":"261","severity":1,"message":"279","line":43,"column":8,"nodeType":"263","endLine":43,"endColumn":30,"suggestions":"280"},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["283"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["284"],["281"],["282"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.",["285"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'subName' and 'subNameState'. Either include them or remove the dependency array.",["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"287","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [url]",{"range":"294","text":"295"},"Update the dependencies array to be: [matchTerm, postStatus, searchTerm]",{"range":"296","text":"297"},{"range":"298","text":"295"},"Update the dependencies array to be: [matchUrl, postStatus, subName, subNameState]",{"range":"299","text":"300"},[575,577],"[url]",[1289,1312],"[matchTerm, postStatus, searchTerm]",[575,577],[1438,1460],"[matchUrl, postStatus, subName, subNameState]"]