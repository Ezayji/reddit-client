[{"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\App\\App.js":"3","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Header\\Header.js":"4","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js":"5","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\Store.js":"6","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js":"7","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostsList.js":"8","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostRender.js":"9","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Preview.js":"10","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Post.js":"11","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js":"12","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Comments.js":"13","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js":"14","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Reply.js":"15","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js":"16"},{"size":887,"mtime":1610524174903,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":699,"mtime":1610704095095,"results":"20","hashOfConfig":"18"},{"size":274,"mtime":1610388253843,"results":"21","hashOfConfig":"18"},{"size":1173,"mtime":1610704330067,"results":"22","hashOfConfig":"18"},{"size":184,"mtime":1610694380887,"results":"23","hashOfConfig":"18"},{"size":1697,"mtime":1610696587377,"results":"24","hashOfConfig":"18"},{"size":1123,"mtime":1610693513456,"results":"25","hashOfConfig":"18"},{"size":1133,"mtime":1610700587283,"results":"26","hashOfConfig":"18"},{"size":2962,"mtime":1610629537209,"results":"27","hashOfConfig":"18"},{"size":463,"mtime":1610608366008,"results":"28","hashOfConfig":"18"},{"size":1552,"mtime":1610629741516,"results":"29","hashOfConfig":"18"},{"size":823,"mtime":1610625784725,"results":"30","hashOfConfig":"18"},{"size":1343,"mtime":1610655013354,"results":"31","hashOfConfig":"18"},{"size":1353,"mtime":1610655898704,"results":"32","hashOfConfig":"18"},{"size":1042,"mtime":1610703131891,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1q0w9qj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\index.js",[],["70","71"],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\App\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\SearchBar\\SearchBar.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\Store.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\Redux\\PostsSlice.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostsList.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\PostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Preview.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Post.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SinglePostRender.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Comments.js",["72"],"import React, { useState, useEffect } from 'react';\r\nimport SingleComment from './SingleComment';\r\n\r\nconst Content = ({ url }) => {\r\n    const [comments, setComments] = useState(null);\r\n    useEffect(() => {\r\n        const clink = `https://www.reddit.com${url}.json?limit=200`\r\n        async function fetchComments(){\r\n            const response = await fetch(clink);\r\n            const jsonResponse = await response.json();\r\n            setComments(jsonResponse);\r\n        }\r\n        fetchComments();\r\n    }, [])\r\n    \r\n    if(!comments){\r\n        return <h1>Loading</h1>\r\n    }\r\n\r\n    return(\r\n        <div className=\"comments\">\r\n            {comments[1].data.children.map((comment, i) => (\r\n                <SingleComment comment={comment} key={i} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SingleComment.js",[],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\Reply.js",[],["73","74"],"C:\\Users\\ADMIN\\Desktop\\Asjad\\CodeProj\\reddit-client\\src\\Components\\PostsList\\SearchResults.js",["75","76","77","78","79","80","81","82"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAllPosts, fetchInitialPosts } from '../Redux/PostsSlice';\r\nimport PostRender from './PostRender';\r\n\r\nimport store from '../Redux/Store';\r\n\r\n\r\nfunction SearchResults(){\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(selectAllPosts);\r\n\r\n    const postStatus = useSelector(state => state.posts.status);\r\n    const error = useSelector(state => state.posts.error);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    let content\r\n/*\r\n    if(postStatus === 'loading'){\r\n        content = <div>Loading...</div>\r\n    } else if (postStatus === 'succeeded'){\r\n        content = posts.data.children.map((post, i)=> (\r\n                <PostRender post={post} key={post.data.id} />\r\n        ))\r\n    } else if (postStatus === 'error'){\r\n        content = {error};\r\n    } \r\n*/\r\n    return(\r\n        <div className='feed'>\r\n            hi\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default SearchResults;\r\n\r\n/*\r\n{content}\r\n */",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":14,"column":8,"nodeType":"89","endLine":14,"endColumn":10,"suggestions":"90"},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":26,"nodeType":"95","messageId":"96","endLine":3,"endColumn":43},{"ruleId":"93","severity":1,"message":"97","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"93","severity":1,"message":"98","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"93","severity":1,"message":"99","line":10,"column":11,"nodeType":"95","messageId":"96","endLine":10,"endColumn":19},{"ruleId":"93","severity":1,"message":"100","line":11,"column":11,"nodeType":"95","messageId":"96","endLine":11,"endColumn":16},{"ruleId":"93","severity":1,"message":"101","line":13,"column":11,"nodeType":"95","messageId":"96","endLine":13,"endColumn":21},{"ruleId":"93","severity":1,"message":"102","line":14,"column":11,"nodeType":"95","messageId":"96","endLine":14,"endColumn":16},{"ruleId":"93","severity":1,"message":"103","line":20,"column":9,"nodeType":"95","messageId":"96","endLine":20,"endColumn":16},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["106"],["104"],["105"],"no-unused-vars","'fetchInitialPosts' is defined but never used.","Identifier","unusedVar","'PostRender' is defined but never used.","'store' is defined but never used.","'dispatch' is assigned a value but never used.","'posts' is assigned a value but never used.","'postStatus' is assigned a value but never used.","'error' is assigned a value but never used.","'content' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [url]",{"range":"109","text":"110"},[510,512],"[url]"]